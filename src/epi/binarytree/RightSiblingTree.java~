/**
 * 10.16
 */
package epi.binarytree;

public class RightSiblingTree {
  
  
  public static void main(String[] args) { 
    BinaryTreeNode<String> tree = BinaryTreeTest.getSamplePerfectBinaryTree();
    constructRightSibling(tree);
    System.out.println("RightNode of F: " + BinaryTreeTest.fNode.next.data);
    System.out.println("RightNode of J: " + BinaryTreeTest.jNode.next.data);
  }
  
  public static void constructRightSibling(BinaryTreeNode<String> tree) {
    BinaryTreeNode<String>  leftStart = tree;
    while (leftStart != null && leftStart.left != null) {
      populateLowerLevelNextField(leftStart);
      leftStart = leftStart.left;
    }
  }
  
  public static void populateLowerLevelNextField(BinaryTreeNode<String> startNode) {
    BinaryTreeNode<String> iter = startNode;
    
    while (iter != null) {
      iter.left.next = iter.right;
      
      if (iter.next != null) {
        iter.right.next = iter.next.left;
      }
      iter = iter.next;
    }
  }
}
